<?php

/**
 * @file
 * SN PDF Tracking
 */


function pdf_tracking_init() {

$detect = mobile_detect_get_object();
  $mobile = $detect->isMobile();
  $is_tablet = $detect->isTablet();

/*
 $useragent=$_SERVER['HTTP_USER_AGENT'];
   if (preg_match('/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i',$useragent)||preg_match('/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i',substr($useragent,0,4)) ) {
            $mobile = 1;
         }
           else {
            $mobile = 0;
           }
dpm('mobile: ' . $mobile);
*/

   if ( isset($_REQUEST['pdf']) && $mobile < 1 ) {
            drupal_add_js(drupal_get_path('module', 'pdf_tracking') . '/pdf_tracking.js');
         }

  if ( arg(1) == 'pdf_tracking' && arg(2) == 'tab3' && arg(3) == 'purge' && arg(4) <> 'confirm' ) {
           drupal_set_message('<a href="/admin/pdf_tracking/tab3/purge/confirm">Confirm Purge?!</a>');
         }


  if ( arg(1) == 'pdf_tracking' && arg(2) == 'tab3' && arg(3) == 'purge' && arg(4) == 'confirm' ) {
           drupal_set_message('Purged');
           db_delete('pdf_tracking')
            ->execute();
         }

  if ( isset($_REQUEST['dpdf'])) {
    $file = db_query('SELECT pdf_name FROM {pdf_tracking_management} WHERE pdf_id = :id', array(':id' => $_REQUEST['dpdf']))->fetchObject();
       header('Content-Description: File Transfer');
       header('Content-Type: application/pdf');
       header('Content-Disposition: attachment; filename='.basename('public://pdf_tracking/' . $file->pdf_name));
       header('Content-Transfer-Encoding: binary');
       header('Expires: 0');
       header('Pragma: private');
       header('Cache-Control: private, no-cache, no-store, max-age=0, must-revalidate, proxy-revalidate');
       header('Expires: Tue, 04 Sep 2012 05:32:29 GMT');
       header('Content-Length: ' . filesize('public://pdf_tracking/' . $file->pdf_name));

       watchdog('pdf', '<pre>' . print_r($file) . '</pre>');
       readfile('public://pdf_tracking/' . $file->pdf_name);
       exit();
  }

 if ( arg(0) == 'pdf_download' && $mobile < 1 ) {
     if ( !isset($_REQUEST['dpdf']) ) {
          unset($_SESSION['pdf_download']);
          $result = db_query('SELECT pdf_id, pdf_name, pdf_url, thankyou_page_id FROM {pdf_tracking_management} WHERE pdf_id = :id', array(':id' => arg(1)))->fetchObject();

       $ipaddress = pdf_ipaddress();

          $node = node_load($result->thankyou_page_id);
          $url = drupal_get_path_alias('node/' . $node->nid);
          $filename = preg_replace('#public://pdf_tracking/#', '', $result->pdf_name);

           $data  = date('m/d/Y') . ',';
           $data .= $ipaddress . ',';
           $data .= $file->filename;
           db_insert('pdf_tracking')
             ->fields(array(
                 'pdf_name' => $result->pdf_name,
                 'sn_tracking' => $data
                ))
             ->execute();


if (isset($_SERVER['HTTPS'])) {
  $server = 'https://' . $_SERVER['SERVER_NAME'] . '/';
}
 else {
  $server = 'http://' . $_SERVER['SERVER_NAME'];
    if ($_SERVER['SERVER_PORT'] == '8083') {
      $server .= ':8083/';
    }
     else {
  $server .= '/';
   }
 }

     $location = $server . $url . '?pdf=' . $result->pdf_id;
     drupal_goto($location);
     exit();
  }
}

   if ( arg(0) == 'pdf_download' && $mobile > 0 ){
          $result = db_query('SELECT fid FROM {pdf_tracking_management} WHERE pdf_url = :id', array(':id' => arg(1)))->fetchObject();
          $file = file_load($result->fid);

           $data  = date('m/d/Y') . ',';
           $data .= pdf_ipaddress() . ',';
           $data .= $file->filename;
           db_insert('pdf_tracking')
             ->fields(array(
                 'pdf_id' => arg(1),
                 'sn_tracking' => $data
                ))
             ->execute();
          $path = file_create_url($file->uri);
          drupal_goto($path);
          exit();
       }

   if ( arg(1) == 'pdf_tracking' &&
        arg(2) == 'delete' ) {
          drupal_set_message('<a href="/admin/pdf_tracking/delete/confirm/' . arg(3) . '">Confirm Delete</a>');
        }

   if ( arg(1) == 'pdf_tracking' &&
        arg(2) == 'delete' &&
        arg(3) == 'confirm') {
          db_delete('pdf_tracking_management')
            ->condition('pdf_id', arg(4))
            ->execute();
        }
/**
 *
 *  CSV DOWNLOAD
 */
 if ( arg(1) == 'pdf_tracking' &&
      arg(3) == 'csv' &&
      $mobile > 0 ) {
          drupal_goto('admin/pdf_tracking/tab4/');
    }


 if ( arg(1) == 'pdf_tracking' &&
      arg(3) == 'csv' &&
      $mobile < 1 ) {
         $array = db_query('SELECT pdf_name, sn_tracking FROM {pdf_tracking}')->fetchAll();
         $firstLineKeys = false;
            foreach ( $array as $arr ) {
              $data .= $arr->pdf_name . ',';
              $data .= $arr->sn_tracking;
              $data .= "\n";
            }
              $data = preg_replace('/,$/', '', $data);
              $data = $header . "\n" . $data;
              $handle = fopen('public://download.csv', 'w');
                 fwrite($handle, $data);
                 fclose($handle);
                 header('Content-Type: application/octet-stream');
                 header('Content-Disposition: attachment; filename=download.csv');
                 header('Expires: 0');
                 header('Cache-Control: must-revalidate');
                 header('Pragma: public');
                 header('Content-Length: ' . filesize('public://download.csv'));
                 readfile('public://download.csv');
                 exit;
        }

    }


/**
 *
 *  hook_menu
 */
function pdf_tracking_menu() {
  $items = array();


  $items['pdf_download'] = array(
              'title' => 'pdf_download',
              'page callback' => 'pdf_download',
              'access arguments' => array('access pdf_download content'),
              'description' => 'pdf_download',
              'access callback' => TRUE,
          );

  $items['admin/pdf_tracking'] = array(
              'title' => 'PDF Tracking',
              'page callback' => 'pdf_tracking',
              'access arguments' => array('access pdf_tracking content'),
              'description' => 'PDF Tracking',
              'access callback' => TRUE,
              'type' => MENU_NORMAL_ITEM,
          );

  $items['admin/pdf_tracking/tab1'] = array(
    'title' => 'Manage PDF\'s',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10
          );
  $items['admin/pdf_tracking/tab2'] = array(
    'title' => 'Upload PDF',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'pdf_tracking_upload',
     'access arguments' => array('access pdf_tracking content'),
         );
  $items['admin/pdf_tracking/tab3'] = array(
    'title' => 'Download Totals',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'pdf_tracking_totals',
     'access arguments' => array('access pdf_tracking content'),
  );
  $items['admin/pdf_tracking/tab4'] = array(
    'title' => 'View Downloads',
    //'type' => MENU_LOCAL_TASK,
    'page callback' => 'view_pdf_tracking_totals',
     'access arguments' => array('access pdf_tracking content'),
  );
   return $items;
}



function pdf_download() {
    return drupal_get_form('pdf_download_form');
}

function pdf_tracking() {
  global $user;
  if ($user->uid > 0) {
    return drupal_get_form('pdf_tracking_form');
  }
}

function pdf_tracking_upload() {
  global $user;
  if ($user->uid > 0) {
    return drupal_get_form('pdf_tracking_upload_form');
  }
}

function pdf_tracking_totals() {
  global $user;
  if ($user->uid > 0) {
    return drupal_get_form('pdf_tracking_totals_form');
  }
}

function view_pdf_tracking_totals() {
  global $user;
  if ($user->uid > 0) {
    return drupal_get_form('view_pdf_tracking_totals_form');
  }
}
function pdf_download_form($form, $form_state) {
  //dpm($form);
}



function view_pdf_tracking_totals_form($form, $form_state) {

  $result = db_query('SELECT sn_tracking FROM {pdf_tracking}');
  $rows = array();

  foreach ($result as $key => $value) {
   unset($data);

       $ipaddress = pdf_ipaddress();

       $parse = explode(",", $value->sn_tracking);
         $data[] = $parse[0];
         $data[] = $parse[1];
         $data[] = $parse[2];
         array_push($rows, $data);

   }

    $header = array('Date', 'IP Address', 'PDF');
      $form['markup'] = array(
         '#markup' => '<a href="/admin/pdf_tracking/tab3/">Return</a>',
       );
      $form['markup2'] = array(
         '#markup' => theme('table', array('header' => $header, 'rows' => $rows)),
       );

  return $form;

}
function pdf_tracking_totals_form($form, $form_state) {

 $form = array();
 $options = array();
 $count_row  = array();
 $count_rows = array();
 $list_row  = array();
 $list_rows = array();

$total = 0;
 $counts = db_query('SELECT pdf_name, COUNT(pdf_name) AS CNT FROM {pdf_tracking} GROUP BY pdf_name ORDER BY CNT ASC')->fetchAll();
   foreach ($counts as $key => $count) {
      $count_row[] = $count->CNT ;
      $count_row[] = $count->pdf_name;
      array_push($count_rows, $count_row);
      $total = $total + $count->CNT;
      unset($count_row);
  }

$header = array('Download Count', 'File');


 $form['markup2'] = array(
     '#markup' => theme('table',
                   array('header' => $header,
                         'rows' => $count_rows)
                   ),
  );
 $form['markup1'] = array(
    '#markup' => 'Total: ' . $total . '<br><a href="/admin/pdf_tracking/tab3/csv">Download CSV</a> <span style="padding-left:80%"><a href="/admin/pdf_tracking/tab3/purge">Purge All Data</a></span>',
  );
  return $form;
}


function pdf_tracking_upload_form($form, $form_state) {

if (isset($_REQUEST['edit'])) {
    $edit = db_query('SELECT pdf_id, pdf_name, pdf_url, ad_title, ad_copy, ga_title, thankyou_page_id, audit_title, audit_copy, audit_url, audit_url_title FROM {pdf_tracking_management} WHERE pdf_id = :id', array(':id' => $_REQUEST['edit']))->fetchObject();

    $nids = db_query('SELECT nid FROM pdf_nid WHERE pdf_id = :id', array(':id' => $_REQUEST['edit']))->fetchAll();
    foreach ($nids as $key => $value) {
      $nid .= $value->nid . "\n";
    }
  }
   else {
    $edit = '';
   }

$result = db_query('SELECT nid, title FROM {node} ORDER BY nid ASC');
  foreach ( $result as $row ) {
    $forms1[$row->nid] = $row->title . ' (' . $row->nid . ')';
  }

  $form['description'] = array(
    '#type' => 'item',
    '#title' => t('PDF Upload'),
  );

if (!isset($_REQUEST['edit'])) {
  $form['file'] = array(
    '#type' => 'file',
    '#title' => t('PDF File'),
  );
}
 else {
  $form['html'] = array(
   '#type' => 'markup',
   '#markup' => '<h2>' . $edit->pdf_name . '</h2>',
  );
 }
  $form['ad_title'] = array(
     '#type' => 'textfield',
     '#title' => t('AD Title'),
     '#default_value' => $edit->ad_title,
    );
  $form['ad_copy'] = array(
     '#type' => 'textfield',
     '#title' => t('Ad Copy'),
     '#default_value' => $edit->ad_copy,
    );
  $form['ga_title'] = array(
     '#type' => 'textfield',
     '#title' => t('ga title'),
     '#default_value' => $edit->ga_title,
    );

  $form['show_page'] = array(
     '#type' => 'textarea',
     '#title' => t('Page to show CTA'),
     '#cols' => 60,
     '#rows' => 5,
     '#default_value' => $nid,
    );

  $form['thankyou_page'] = array(
     '#type' => 'select',
     '#options' => drupal_map_assoc($forms1),
     '#options' => $forms1,
     '#title' => t('Thank you page'),
     '#default_value' => $edit->thankyou_page_id,
    );




  $form['audit_title'] = array(
     '#type' => 'textfield',
     '#title' => t('Audit Title'),
     '#default_value' => $edit->audit_title,
    );
  $form['audit_copy'] = array(
     '#type' => 'textfield',
     '#title' => t('Audit Copy'),
     '#default_value' => $edit->audit_copy,
    );
  $form['audit_url'] = array(
     '#type' => 'textfield',
     '#title' => t('Audit URL'),
     '#default_value' => $edit->audit_url,
    );
  $form['audit_url_title'] = array(
     '#type' => 'textfield',
     '#title' => t('Audit URL Title'),
     '#default_value' => $edit->audit_url_title,
    );

if (!isset($_REQUEST['edit'])) {
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
  );
    $form['#validate'][] = 'pdf_upload_form_validate';
 }
  else {
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Edit',
  );
  }

  $form['#submit'][]   = 'pdf_upload_form_submit';

return $form;

}

function pdf_tracking_form($form, $form_state) {


  $form['markup'] = array(
    '#markup' => 'PDF Tracking',
  );

 $forms = array();
 $options = array();
 $row  = array();
 $rows = array();

 $pdf_files = db_query('SELECT pdf_id, pdf_name, pdf_url, ad_title, ad_copy, ga_title, show_page_id, thankyou_page_id, audit_title, audit_copy, audit_url, audit_url_title FROM {pdf_tracking_management}')->fetchAll();

  foreach ($pdf_files as $key => $value) {
    $nid_row = '';
    $nids = db_query('SELECT nid FROM {pdf_nid} WHERE pdf_id = :id', array(':id' => $value->pdf_id))->fetchAll();
      $row[] = '<a href="/admin/pdf_tracking/delete/' . $value->pdf_id . '">x</a>   <a href="/admin/pdf_tracking/tab2?edit=' . $value->pdf_id . '">e</a>';
      $row[] = $value->pdf_name;
      $row[] = 'http://' . $_SERVER['HTTP_HOST'] . '/pdf_download/' . $value->pdf_id;
      $row[] = $value->ad_title;
      $row[] = $value->ad_copy;
      $row[] = $value->ga_title;
       foreach ($nids as $nkey => $nvalue) {
         $nid_row .= $nvalue->nid . "\n";
       }
      $row[] = $nid_row;
      $node = node_load($value->thankyou_page_id);
      $row[] = $node->title . ' (' . $node->nid . ')';
      $row[] = $value->audit_title;
      $row[] = $value->audit_copy;
      $row[] = $value->audit_url;
      $row[] = $value->audit_url_title;
      array_push($rows, $row);
      unset($row);
    }

 $header = array('d/e', 'PDF File', 'Link', 'Ad Title', 'Ad Copy', 'ga Title', 'Show Page', 'Thank You Page', 'Audit Title', 'Audit Copy', 'Audit URL', 'Audit URL TItle');
 $form['markup2'] = array(
     '#markup' => theme('table', array('header' => $header, 'rows' => $rows)),
   );

  return $form;
}


function pdf_upload_form_validate($form, &$form_state) {
  //dpm($form);
  //dpm($form_state);

 if ($form['file']) {

         $file = file_save_upload('file', array(
          'file_validate_extensions' => array('pdf')
        ));

  //    $data = drupal_http_request($url);
      //$file = file_unmanaged_save_data($data->data, 'public://pdf_tracking');
      //$file = file_unmanaged_copy('file', 'public://pdf_tracking', FILE_EXISTS_REPLACE);
    }
      else {
      form_set_error('file', t('Failed to write the uploaded file to the site\'s file folder.'));
    }


 if ($file) {
    if ($file = file_move($file, 'public://pdf_tracking/' . $file->filename, $replace = FILE_EXISTS_REPLACE)) {
      $form_state['storage']['file'] = $file;
    }
    else {
      form_set_error('file', t('Failed to write the uploaded file to the site\'s file folder.'));
    }
  }
}

function pdf_tracking_submit($form, &$form_state) {
  dpm($form_state);
  $result = db_truncate('pdf_tracking')->execute();
    foreach ( $form['site_webforms']['#value'] as $row ) {
     db_insert('pdf_tracking')
        ->fields(array(
         'form_id' => $row
          ))
        ->execute();
    }
  drupal_set_message(t('SN PDF Tracking Saved.'));
}

function pdf_upload_form_submit($form, &$form_state) {

  if ($form_state['storage']['file']->fid > 1) {
      db_insert('pdf_tracking_management')
       ->fields(array('pdf_name', 'pdf_url', 'ad_title', 'ad_copy', 'ga_title', 'thankyou_page_id', 'audit_title', 'audit_copy', 'audit_url', 'audit_url_title'))
       ->values(array(
         'pdf_name'    => $form_state['storage']['file']->filename,
         'pdf_url'     => time(U),
         'ad_title' => $form_state['values']['ad_title'],
         'ad_copy' => $form_state['values']['ad_copy'],
         'ga_title' => $form_state['values']['ga_title'],
         //'show_page_id' => $form_state['values']['show_page'],
         'thankyou_page_id' => $form_state['values']['thankyou_page'],
         'audit_title' => $form_state['values']['audit_title'],
         'audit_copy' => $form_state['values']['audit_copy'],
         'audit_url' => $form_state['values']['audit_url'],
         'audit_url_title' => $form_state['values']['audit_url_title'],
           ))
       ->execute();
 $last_id = db_query('SELECT MAX(pdf_id) FROM {pdf_tracking_management}')->fetchField();
  $lines = explode(PHP_EOL, $form_state['values']['show_page']);
  //dpm($lines);
  foreach ($lines as $key => $value) {
    dpm($values);
       db_insert('pdf_nid')
       ->fields(array('pdf_id', 'nid'))
         ->values(array(
           'pdf_id'    => $last_id,
           'nid' => $value
         ))
       ->execute();
      }
    }
  if ($form_state['values']['op'] == 'Edit') {
    $query = db_update('pdf_tracking_management')
      ->fields(array(
         'ad_title' => $form_state['values']['ad_title'],
         'ad_copy' => $form_state['values']['ad_copy'],
         'ga_title' => $form_state['values']['ga_title'],
         //'show_page_id' => $form_state['values']['show_page'],
         'thankyou_page_id' => $form_state['values']['thankyou_page'],
         'audit_title' => $form_state['values']['audit_title'],
         'audit_copy' => $form_state['values']['audit_copy'],
         'audit_url' => $form_state['values']['audit_url'],
         'audit_url_title' => $form_state['values']['audit_url_title'],
        ))
      ->condition('pdf_id', $_REQUEST['edit'], '=')
      ->execute();
        $lines = explode(PHP_EOL, $form_state['values']['show_page']);
        db_delete('pdf_nid')
            ->condition('pdf_id', $_REQUEST['edit'])
            ->execute();
  foreach ($lines as $key => $value) {
    if ($value > 0) {
       db_insert('pdf_nid')
       ->fields(array('pdf_id', 'nid'))
         ->values(array(
           'pdf_id'    => $_REQUEST['edit'],
           'nid' => $value
         ))
       ->execute();
        }
      }
    drupal_goto('/admin/pdf_tracking/');
  }
 }

 function pdf_ipaddress() {
      $ipaddress = '';
    if (getenv('HTTP_CLIENT_IP'))
        $ipaddress = getenv('HTTP_CLIENT_IP');
    else if(getenv('HTTP_X_FORWARDED_FOR'))
        $ipaddress = getenv('HTTP_X_FORWARDED_FOR');
    else if(getenv('HTTP_X_FORWARDED'))
        $ipaddress = getenv('HTTP_X_FORWARDED');
    else if(getenv('HTTP_FORWARDED_FOR'))
        $ipaddress = getenv('HTTP_FORWARDED_FOR');
    else if(getenv('HTTP_FORWARDED'))
        $ipaddress = getenv('HTTP_FORWARDED');
    else if(getenv('REMOTE_ADDR'))
        $ipaddress = getenv('REMOTE_ADDR');
    else
        $ipaddress = 'UNKNOWN';
      return $ipaddress;
 }
